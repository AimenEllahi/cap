/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 public/models/cap_version_0.gltf
*/

import { useState } from "react";
import {
  useGLTF,
  useCursor,
  useTexture,
  Text,
  Decal,
  Environment,
  OrbitControls,
  RenderTexture,
  RandomizedLight,
  PerspectiveCamera,
  AccumulativeShadows,
  Html,
  Text3D,
  Sky,
} from "@react-three/drei";
import { useControls } from "leva";
import { useColorStore } from "../Utils/store";
import { useTextStore } from "../Utils/textStore";

import * as THREE from "three";
function Ylioppilaslakki(props) {

  const activeColor = useColorStore((state) => state.activeColor);
  const textFrontLeft = useTextStore((state) => state.textFrontLeft);
  const textFrontRight = useTextStore((state) => state.textFrontRight);
  const textBack = useTextStore((state) => state.textBack);
  const font = useTextStore((state) => state.font);


  const [customization, setCustomization] = useState({
    badge: "fi",
    roundRibbonColor: "",
    cordColor: "black",
    embroideryTextFront: { left: "Your Text", right: "Your Text" },
    embroideryTextBack: "Your Text",
    size: "",
    quantity: 1,
    productStorage: "",
  });
  const { nodes, materials } = useGLTF("/models/cap_version_9.gltf");

  const texture = new THREE.TextureLoader().load(
    "/textures/fabric/Fabric_Knitted_006_basecolor.jpg"
  );

  const { pos, height, rotation } = useControls({
    //{"pos":[-0.3099999999999997,0.36000000000000065,-0.46]}
    pos: { value: [-0.391, 0.36, -0.46], step: 0.01 },
    height: { value: 0.1, min: 0, max: 1, step: 0.01 },
    rotation: { value: [0, 0, 0], step: 0.1 },
  });

  return (
    <group {...props} dispose={null}>
      {/* <Text3D
        font={"/Fonts/Roboto_Regular.json"}
        size={0.1}
        position={pos}
        height={height}
        bevelEnabled={true}
        bevelThickness={0.01}
        // bend text


      >
        Hello world!
        <meshStandardMaterial attach='material' map={texture} />
      </Text3D> */}

      {/* <mesh>
        <planeGeometry />
        <Decal position={pos} rotation={rotation} scale={1}>
          <meshStandardMaterial
            roughness={0.1}
            transparent
            polygonOffset
            polygonOffsetFactor={-10}
            position={[0, -10, 0]}
          >
            <RenderTexture attach='map'>
              <PerspectiveCamera makeDefault manual position={[0, 0, 50]} />
              <ambientLight intensity={0.5} />
              <directionalLight position={[10, 10, 5]} />
              <Text
                rotation={[0, 0, 0]}
                fontSize={10}
                color='red'
                position={[0, 0, 0]}
              >
                Some
              </Text>
         
            </RenderTexture>
          </meshStandardMaterial>
        </Decal>{" "}
      </mesh> */}
      {/* <mesh
        geometry={nodes.Retopo_Text001.geometry}
        material={materials["Material.002"]}
        position={[0, 0, 0.003]}
      />
      <mesh
        geometry={nodes.Retopo_Text002.geometry}
        material={materials["Material.002"]}
        position={[0, 0, -0.002]}
      /> */}

      {/* decorative ribbon */}
      <mesh
        geometry={nodes.gold001.geometry}
        material={materials.stribe}
        visible={customization.roundRibbonColor === "gold"}
      />
      <mesh
        geometry={nodes.silver.geometry}
        material={materials["stribe.001"]}
        visible={customization.roundRibbonColor === "silver"}
      />

      {/* cord */}
      <mesh
        geometry={nodes.gold.geometry}
        material={materials["line 1"]}
        visible={customization.cordColor === "gold"}
      />
      <mesh
        geometry={nodes.silver001.geometry}
        material={materials["line 1.001"]}
        visible={customization.cordColor === "silver"}
      />
      <mesh
        geometry={nodes.black.geometry}
        material={materials["line 1.002"]}
        visible={customization.cordColor === "black"}
      />

      <mesh geometry={nodes.sloejfe.geometry} material={materials.sloejfe_m} />
      <mesh
        geometry={nodes.the_top_of_the_cap_.geometry}
        material={materials["outside white"]}
      />
      <mesh
        geometry={nodes.the_middle_part_.geometry}
        material={materials["outside black"]}
      >
        <Decal position={[-0.391,0.36,-0.46]} rotation={[0,0,0]} scale={3}>
          <meshStandardMaterial
            roughness={0.1}
            transparent
            polygonOffset
            polygonOffsetFactor={-10}
            position={[0, -10, 0]}
          >
            <RenderTexture attach='map'>
              <PerspectiveCamera makeDefault manual position={[0, 0, 150]} />
              <ambientLight intensity={0.5} />
              <directionalLight position={[10, 10, 5]} />
              <Text3D
                rotation={[0, 0, 0]}
                size={3}
                height={0.3}
                font={font}
                position={[0, 0, 1]}
              >
                <meshStandardMaterial attach='material' color={activeColor?.hex} />
                {textFrontLeft}
              </Text3D>
              {/* <Dodecahedron /> */}
            </RenderTexture>
          </meshStandardMaterial>
        </Decal>
        <Decal position={[0.20899999999999997,0.36,-0.46]} rotation={[0,0,0]} scale={3}>
          <meshStandardMaterial
            roughness={0.1}
            transparent
            polygonOffset
            polygonOffsetFactor={-10}
            position={[0, -10, 0]}
          >
            <RenderTexture attach='map'>
              <PerspectiveCamera makeDefault manual position={[0, 0, 150]} />
              <ambientLight intensity={0.5} />
              <directionalLight position={[10, 10, 5]} />
              <Text3D
                rotation={[0, 0, 0]}
                size={3}
                height={0.3}
                font={font}
                position={[0, 0, 1]}
              >
                <meshStandardMaterial attach='material' color={activeColor?.hex} />
                {textFrontRight}
              </Text3D>
              {/* <Dodecahedron /> */}
            </RenderTexture>
          </meshStandardMaterial>
        </Decal>
        <Decal position={[-0.391,0.1,-0.46]} rotation={[0,-0.7,0]} scale={3}>
          <meshStandardMaterial
            roughness={0.1}
            transparent
            polygonOffset
            polygonOffsetFactor={-10}
            position={[0, -10, 0]}
          >
            <RenderTexture attach='map'>
              <PerspectiveCamera makeDefault manual position={[0, 0, 150]} />
              <ambientLight intensity={0.5} />
              <directionalLight position={[10, 10, 5]} />
              <Text3D
                rotation={[0, 0, 0]}
                size={3}
                height={0.3}
                font={font}
                position={[0, 0, 1]}
              >
                <meshStandardMaterial attach='material' color={activeColor?.hex} />
                {textBack}
              </Text3D>
              {/* <Dodecahedron /> */}
            </RenderTexture>
          </meshStandardMaterial>
        </Decal>
      </mesh>
      <mesh
        geometry={nodes.the_fornt_part.geometry}
        material={materials["outide black 1"]}
      />
      <mesh
        geometry={nodes.the_white_inside.geometry}
        material={materials["inside white with fold"]}
      />
      <mesh
        geometry={nodes.the_leather_part.geometry}
        material={materials["inside leather"]}
      />
      <mesh
        geometry={nodes.the_top_inside.geometry}
        material={materials["inside white 1"]}
      />
      <mesh
        geometry={nodes.the_line_in_the_bottom.geometry}
        material={materials["inside black"]}
      />
      <mesh
        geometry={nodes.cap_line_1.geometry}
        material={materials["line 2"]}
      />

      {/* crystal */}
      <group scale={0.071} visible={customization.badge === "crystal"}>
        <mesh
          geometry={nodes.Plane003.geometry}
          material={materials["Material.003"]}
        />
        <mesh
          geometry={nodes.Plane003_1.geometry}
          material={materials["diamond.001"]}
        />
      </group>

      {/* suomi */}
      <mesh
        geometry={nodes.first_002.geometry}
        material={materials["Material.005"]}
        visible={customization.badge === "fi"}
      />

      {/* start */}
      <mesh
        geometry={nodes.Diamond001.geometry}
        material={materials["diamond.001"]}
        visible={customization.badge === "star"}
      />
      <mesh
        geometry={nodes.Diamond001_1.geometry}
        material={materials.gold}
        visible={customization.badge === "star"}
      />
    </group>
  );
}

export default Ylioppilaslakki;

useGLTF.preload("./models/cap_version_9.gltf");
